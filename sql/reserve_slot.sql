DROP FUNCTION IF EXISTS reserve_slot(BIGINT, TEXT, INTEGER);CREATE OR REPLACE FUNCTION reserve_slot(_slot_id BIGINT, _user_id TEXT, _occupied INTEGER)	RETURNS VOID AS $$DECLARE	_old_occupied   INTEGER;	_exception_err TEXT;BEGIN	BEGIN			SELECT reservations.r_occupied		INTO _old_occupied		FROM reservations		WHERE reservations.s_id = _slot_id AND reservations.u_id = _user_id::uuid;		IF NOT FOUND THEN			INSERT INTO reservations(s_id, u_id, r_occupied, r_active)			VALUES (_slot_id, _user_id::uuid, _occupied, B'1');			UPDATE slots 			SET s_capacity = s_capacity - _occupied			WHERE s_id = _slot_id;					ELSE			UPDATE reservations 			SET r_occupied = _occupied			WHERE reservations.s_id = _slot_id AND reservations.u_id = _user_id::uuid;						UPDATE slots 			SET s_capacity = s_capacity - (_occupied - _old_occupied)			WHERE s_id = _slot_id;		END IF;    EXCEPTION 		WHEN unique_violation THEN			GET STACKED DIAGNOSTICS _exception_err = MESSAGE_TEXT;			RAISE unique_violation USING MESSAGE = _exception_err;		WHEN foreign_key_violation THEN			GET STACKED DIAGNOSTICS _exception_err = MESSAGE_TEXT;			RAISE foreign_key_violation USING MESSAGE = _exception_err;		WHEN OTHERS THEN			GET STACKED DIAGNOSTICS _exception_err = MESSAGE_TEXT;			RAISE EXCEPTION USING MESSAGE = _exception_err;	END;	RETURN;END;$$ LANGUAGE 'plpgsql';